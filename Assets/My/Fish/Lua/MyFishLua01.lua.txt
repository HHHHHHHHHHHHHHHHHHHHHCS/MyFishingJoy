local util = require 'xlua.util';

local UnityEngine = CS.UnityEngine;
local GameObject = UnityEngine.GameObject;
local Vector3 = UnityEngine.Vector3;
local Quaternion = UnityEngine.Quaternion;

function HotFix(isHotfix)
    
    --1.1.1 点击宝箱的金币钻石太拥挤分散一点
    xlua.hotfix(CS.Treasour, 'CreatePrize', isHotfix and Treasour_CreatePrize or nil);
    --1.1.2 玩家金币钻石不够时没有相应处理
    --1.2.1 与UI交互时不能发射子弹。
    --1.3.2 炮台3太强，且钻石没用处，不削弱，只有氪金才可使用
    xlua.private_accessible(CS.Gun);
    xlua.hotfix(CS.Gun, 'Attack', isHotfix and Gun_Attack or nil);
    
    --1.2.2 修改技能消耗的钻石数量过多
    xlua.private_accessible(CS.ButterFly);
    xlua.hotfix(CS.ButterFly, 'Start', isHotfix and ButterFly_Start or nil);
    xlua.private_accessible(CS.Ice);
    xlua.hotfix(CS.Ice, 'Start', isHotfix and Ice_Start or nil);
    xlua.private_accessible(CS.Fire);
    xlua.hotfix(CS.Fire, 'Start', isHotfix and Fire_Start or nil);
    
    --1.2.3 Boss撞击玩家数值变动一样且不是减少而是增加的BUG
    if isHotfix then
        xlua.private_accessible(CS.Boss);
        util.hotfix_ex(CS.Boss, 'Start', Boss_Start);
        xlua.private_accessible(CS.DeffendBoss);
        util.hotfix_ex(CS.DeffendBoss, 'Start', DeffendBoss_Start);
        xlua.private_accessible(CS.InvisibleBoss);
        util.hotfix_ex(CS.InvisibleBoss, 'Start', InvisibleBoss_Start);
    else
        xlua.hotfix(CS.Boss, 'Start', nil);
        xlua.hotfix(CS.DeffendBoss, 'Start', nil);
        xlua.hotfix(CS.InvisibleBoss, 'Start', nil);
    end
    
    --1.3.1 boss撞击玩家当钻石金币不够时会产生负数
    if isHotfix then
        util.hotfix_ex(CS.Gun, 'GoldChange', Gun_GoldChange);
        util.hotfix_ex(CS.Gun, 'DiamandsChange', Gun_DiamandsChange);
    else
        xlua.hotfix(CS.Gun, 'GoldChange', nil);
        xlua.hotfix(CS.Gun, 'DiamandsChange', nil);
    end
    
end

Treasour_CreatePrize = function (self)
    print("HotFix ： Treasour_CreatePrize");
    for i = 1, 5, 1 do
        local go = GameObject.Instantiate(self.gold, self.transform.position + Vector3(-10 + i * 40, 0, 0), self.transform.rotation);
        go.transform:SetParent(self.cavas);
        local go1 = GameObject.Instantiate(self.diamands, self.transform.position + Vector3(0, 40, 0) + Vector3(-10 + i * 40, 0, 0), self.transform.rotation);
        go1.transform:SetParent(self.cavas);
    end
end

Gun_Attack = function (self)
    
    if UnityEngine.Input.GetMouseButtonDown(0) then
        
        if UnityEngine.EventSystems.EventSystem.current:IsPointerOverGameObject() then
            return
        end
        print("HotFix ： Gun_Attack");
        
        if self.gun_Level == 3 and self.diamands < 3 then
            return;
        elseif self.gun_Level ~= 3 and (self.gold == 0 or self.gold < -1 - (self.gunLevel - 1) * 2)then
            return
        end
        
        self.bullectAudio.clip = self.bullectAudios[self.gunLevel - 1];
        self.bullectAudio:Play();
        
        if self.Butterfly then
            GameObject.Instantiate(self.Bullects[self.gunLevel - 1], self.attackPos.position, self.attackPos.rotation * Quaternion.Euler(0, 0, 20));
            GameObject.Instantiate(self.Bullects[self.gunLevel - 1], self.attackPos.position, self.attackPos.rotation * Quaternion.Euler(0, 0, -20));
        end
        
        GameObject.Instantiate(self.Bullects[self.gunLevel - 1], self.attackPos.position, self.attackPos.rotation);
        
        if not self.canShootForFree then
            if self.gunLevel == 3 then
                self:DiamandsChange(-3);
            else
                self:GoldChange(-1 - (self.gunLevel - 1) * 2);
            end
        end
        self.attackCD = 0;
        self.attack = false;
    end
end

ButterFly_Start = function (self)
    self.reduceDiamands = 5;
end

Ice_Start = function (self)
    self.reduceDiamands = 9;
end

Fire_Start = function (self)
    self.reduceDiamands = 7;
end

Boss_Start = function (self)
    self:Start();
    self.m_reduceGold = self.m_reduceGold - 20;
end

DeffendBoss_Start = function (self)
    self:Start();
    self.m_reduceGold = self.m_reduceGold - 30;
end

InvisibleBoss_Start = function (self)
    self:Start();
    self.m_reduceGold = self.m_reduceGold - 5;
end

Gun_GoldChange = function (self, number)
    self:GoldChange(number);
    if self.gold + number < 0 then
        self.gold = 0;
        return;
    end
end

Gun_DiamandsChange = function (self, number)
    self:DiamandsChange(number);
    if self.diamands + number < 0 then
        self.diamands = 0;
        return;
    end
end
